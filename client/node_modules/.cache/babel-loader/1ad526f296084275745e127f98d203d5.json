{"ast":null,"code":"const search = document.getElementById('search');\nconst matchList = document.getElementById('match-list'); // Search words.json and filter it\n\nconst searchWords = async searchText => {\n  const res = await fetch('words.json');\n  const words = await res.json(); // Get matches to current text input\n\n  let matches = words.filter(word => {\n    const regex = new RegExp(`^${searchText}`, 'gi');\n    return word.name.match(regex);\n  });\n\n  if (searchText.length === 0) {\n    matches = [];\n    matchList.innerHTML = '';\n  }\n\n  outputHtml(matches);\n}; // Show results in HTML\n\n\nconst outputHtml = matches => {\n  if (matches.length > 0) {\n    const html = matches.map(match => `\n            <div>\n            <h4>${match.name}</h4>\n            </div>\n        `).join('');\n    matchList.innerHTML = html;\n  }\n};\n\nsearch.addEventListener('input', () => searchWords(search.value));","map":{"version":3,"sources":["/Users/thomaslefebvre/git/projet-jeudemot/src/components/controller/Autocomplete.js"],"names":["search","document","getElementById","matchList","searchWords","searchText","res","fetch","words","json","matches","filter","word","regex","RegExp","name","match","length","innerHTML","outputHtml","html","map","join","addEventListener","value"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,MAAMC,SAAS,GAAGF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAlB,C,CAEA;;AACA,MAAME,WAAW,GAAG,MAAMC,UAAN,IAAoB;AACpC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAD,CAAvB;AACA,QAAMC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB,CAFoC,CAKpC;;AACA,MAAIC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAI;AAC/B,UAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGT,UAAW,EAA1B,EAA6B,IAA7B,CAAd;AACA,WAAOO,IAAI,CAACG,IAAL,CAAUC,KAAV,CAAgBH,KAAhB,CAAP;AACH,GAHa,CAAd;;AAKA,MAAIR,UAAU,CAACY,MAAX,KAAsB,CAA1B,EAA6B;AACzBP,IAAAA,OAAO,GAAG,EAAV;AACAP,IAAAA,SAAS,CAACe,SAAV,GAAsB,EAAtB;AACP;;AACGC,EAAAA,UAAU,CAACT,OAAD,CAAV;AACH,CAhBD,C,CAkBA;;;AACA,MAAMS,UAAU,GAAGT,OAAO,IAAI;AAC1B,MAAGA,OAAO,CAACO,MAAR,GAAiB,CAApB,EAAuB;AACnB,UAAMG,IAAI,GAAGV,OAAO,CAACW,GAAR,CAAYL,KAAK,IAAK;;kBAEzBA,KAAK,CAACD,IAAK;;SAFR,EAIVO,IAJU,CAIL,EAJK,CAAb;AAMJnB,IAAAA,SAAS,CAACe,SAAV,GAAsBE,IAAtB;AACC;AACJ,CAVD;;AAYApB,MAAM,CAACuB,gBAAP,CAAwB,OAAxB,EAAiC,MAAMnB,WAAW,CAACJ,MAAM,CAACwB,KAAR,CAAlD","sourcesContent":["const search = document.getElementById('search');\nconst matchList = document.getElementById('match-list');\n\n// Search words.json and filter it\nconst searchWords = async searchText => {\n    const res = await fetch('words.json');\n    const words = await res.json();\n\n\n    // Get matches to current text input\n    let matches = words.filter(word => {\n        const regex = new RegExp(`^${searchText}`, 'gi');\n        return word.name.match(regex);\n    });\n\n    if (searchText.length === 0) {\n        matches = [];\n        matchList.innerHTML = '';\n}\n    outputHtml(matches);\n};\n\n// Show results in HTML\nconst outputHtml = matches => {\n    if(matches.length > 0) {\n        const html = matches.map(match => `\n            <div>\n            <h4>${match.name}</h4>\n            </div>\n        `).join('');\n\n    matchList.innerHTML = html;\n    }\n}\n\nsearch.addEventListener('input', () => searchWords(search.value));"]},"metadata":{},"sourceType":"module"}
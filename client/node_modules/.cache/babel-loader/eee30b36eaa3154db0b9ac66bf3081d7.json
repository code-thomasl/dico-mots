{"ast":null,"code":"var _jsxFileName = \"/Users/thomaslefebvre/git/projet-jeudemot/src/components/view/WordFormB.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport JResults from './JResults';\nimport { Form, Label, Input, Button, FormGroup } from 'reactstrap';\nconst initialState = {\n  //value: '',\n  valueError: '',\n  answer: ''\n};\nexport default class WordFormB extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onAddItem = () => {\n      this.setState(state => {\n        const history = state.history.concat(state.value);\n        return {\n          history,\n          value: ''\n        };\n      });\n    };\n\n    this.validate = () => {\n      let valueError = '';\n\n      if (!this.state.value.match('^(\\w*)')) {\n        valueError = 'Invalid input, please put only one word without special characters';\n      }\n\n      if (valueError) {\n        this.setState({\n          valueError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleRandomize = event => {\n      event.preventDefault();\n      axios.get('http://localhost:5000/randomize').then(response => {\n        const value = response.data;\n        console.log('---');\n        console.log(response.data); //this.setState({ value });\n\n        this.setState({\n          value: response.data\n        }); //self.setState({ value: response.data });\n        //Perform action based on response\n      }).catch(error => {\n        console.log(error);\n        console.log('dommage'); //Perform action based on error\n      });\n    };\n\n    this.updateInput = word => {\n      let value = word;\n      console.log(value);\n      this.setState({\n        value: \"third\"\n      });\n    };\n\n    this.state = {\n      value: '',\n      valueError: '',\n      answer: '',\n      history: [],\n      suggestions: []\n    };\n    this.items = ['Test', 'Test 2', 'Test 3'];\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n    console.log(event.target.value);\n  }\n\n  handleSubmit(event) {\n    // testing purpose only\n    //alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n    const isValid = this.validate();\n\n    if (isValid) {\n      console.log(this.state); // clear form\n\n      this.setState(initialState);\n    } //this.setState({history : this.state.value});\n    //this.onAddItem();\n    //console.log(this.state);\n\n\n    var self = this;\n    axios.post('http://localhost:5000/sendform', this.state.value, {\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    }).then(function (response) {\n      console.log('---');\n      console.log(response);\n      self.setState({\n        answer: response.data\n      });\n      console.log('---'); //Perform action based on response\n    }).catch(function (error) {\n      console.log(error); //Perform action based on error\n    });\n  } //@TODO Input random word into form field\n\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Donner un mot:\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"search\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.state.valueError)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      onClick: this.handleRandomize,\n      value: \"Randomize\",\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-random\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), \"Randomize\"), React.createElement(Button, {\n      type: \"submit\",\n      value: \"Submit\",\n      color: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(JResults, {\n      word: this.state.value,\n      definition: this.state.answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/thomaslefebvre/git/projet-jeudemot/src/components/view/WordFormB.jsx"],"names":["React","axios","JResults","Form","Label","Input","Button","FormGroup","initialState","valueError","answer","WordFormB","Component","constructor","props","onAddItem","setState","state","history","concat","value","validate","match","handleRandomize","event","preventDefault","get","then","response","data","console","log","catch","error","updateInput","word","suggestions","items","handleChange","bind","handleSubmit","target","isValid","self","post","headers","render","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport JResults from './JResults';\nimport { Form, Label, Input, Button, FormGroup } from 'reactstrap';\n\nconst initialState = {\n    //value: '',\n    valueError: '',\n    answer: ''\n};\n\nexport default class WordFormB extends React.Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n        value: '',\n        valueError: '', \n        answer: '',\n        history: [],\n        suggestions: []\n    };\n\n    this.items = [\n        'Test',\n        'Test 2',\n        'Test 3'\n    ]\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    onAddItem = () => {\n        this.setState(state => {\n            const history = state.history.concat(state.value);\n        return {\n            history,\n            value: '',\n        };\n        });\n    };\n\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n        console.log(event.target.value);\n    }\n\n    validate = () => {\n        let valueError = '';\n\n        if(!this.state.value.match('^(\\w*)')) {\n            valueError = 'Invalid input, please put only one word without special characters'\n        }\n\n        if(valueError) {\n            this.setState({valueError});\n            return false;\n        }\n\n        return true;\n    };\n\n    handleSubmit(event) {\n        // testing purpose only\n        //alert('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n        const isValid = this.validate();\n\n        if(isValid) {\n            console.log(this.state)\n            // clear form\n            this.setState(initialState);\n        }\n\n        //this.setState({history : this.state.value});\n        //this.onAddItem();\n        //console.log(this.state);\n\n        var self = this;\n        axios.post('http://localhost:5000/sendform', this.state.value, {headers: { 'Content-Type': 'text/plain' }})\n        .then(function(response){\n            console.log('---')\n            console.log(response);\n\n            self.setState({ answer: response.data });\n            console.log('---')\n            //Perform action based on response\n        })\n        .catch(function(error){\n            console.log(error);\n            //Perform action based on error\n        });\n    }\n\n    //@TODO Input random word into form field\n    handleRandomize = (event) => {\n        event.preventDefault();\n        axios.get('http://localhost:5000/randomize')\n        .then((response) => {\n            const value = response.data;\n            console.log('---')\n            console.log(response.data);\n\n            //this.setState({ value });\n            this.setState({value: response.data});\n            \n            //self.setState({ value: response.data });\n            //Perform action based on response\n        })\n        .catch((error) => {\n            console.log(error);\n            console.log('dommage');\n            //Perform action based on error\n        });\n    }\n\n    updateInput = (word) => {\n        let value = word;\n        console.log(value);\n        this.setState({value : \"third\"});\n    }\n\nrender() {\n    return (\n    <>\n        <Form onSubmit={this.handleSubmit}>\n        <FormGroup>\n            <Label>Donner un mot:</Label>\n            <Input type=\"text\" id=\"search\" value={this.state.value} onChange={this.handleChange} required />\n            <div style={{color: \"red\"}}>\n                {this.state.valueError}\n            </div>\n        </FormGroup>\n        <FormGroup>\n            <Button type=\"button\" onClick={this.handleRandomize} value=\"Randomize\" color=\"info\"><i className=\"fas fa-random\"></i>Randomize</Button>\n            <Button type=\"submit\" value=\"Submit\" color=\"dark\">Submit</Button>\n        </FormGroup>\n        </Form>\n        <JResults word={this.state.value} definition={this.state.answer} />\n    </>\n    );\n    }\n}"]},"metadata":{},"sourceType":"module"}
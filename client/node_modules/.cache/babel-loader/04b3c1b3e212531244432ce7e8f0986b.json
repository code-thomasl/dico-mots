{"ast":null,"code":"import _slicedToArray from \"/Users/thomaslefebvre/git/projet-jeudemot/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomaslefebvre/git/projet-jeudemot/src/components/view/JNavBar.jsx\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../../i18next';\nimport DarkModeToggle from '../controller/DarkModeToggle';\n\nconst handleClick = lang => {\n  i18n.changeLanguage(lang);\n};\n\nconst JNavBar = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 3),\n        isOpen = _useState2[0],\n        setIsOpen = _useState2[1],\n        dropdownOpen = _useState2[2];\n\n  const _useTranslation = useTranslation(),\n        t = _useTranslation.t,\n        i18n = _useTranslation.i18n;\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    color: \"dark\",\n    dark: true,\n    expand: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(NavbarBrand, {\n    tag: Link,\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Dico mots\"), React.createElement(NavbarToggler, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Collapse, {\n    isOpen: isOpen,\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"mr-auto\",\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    tag: Link,\n    to: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, t('About.1'))), React.createElement(UncontrolledDropdown, {\n    nav: true,\n    inNavbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    nav: true,\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, t('Options.1')), React.createElement(DropdownMenu, {\n    right: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, t('ChangeOrder.1')), React.createElement(DropdownItem, {\n    divider: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, t('Reset.1')))), React.createElement(UncontrolledDropdown, {\n    nav: true,\n    inNavbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    nav: true,\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-globe-europe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), t('Language.1')), React.createElement(DropdownMenu, {\n    right: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(DropdownItem, {\n    onClick: () => handleClick('en'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, t('Language.2')), React.createElement(DropdownItem, {\n    onClick: () => handleClick('fr'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, t('Language.3')), React.createElement(DropdownItem, {\n    onClick: () => handleClick('es'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, t('Language.4')), React.createElement(DropdownItem, {\n    onClick: () => handleClick('it'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, t('Language.5')), React.createElement(DropdownItem, {\n    onClick: () => handleClick('zh-CN'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, t('Language.6'))))), React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    href: \"https://github.com/code-thomasl/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \" GitHub\")), React.createElement(DarkModeToggle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })))));\n};\n\nexport default JNavBar;","map":{"version":3,"sources":["/Users/thomaslefebvre/git/projet-jeudemot/src/components/view/JNavBar.jsx"],"names":["React","useState","Link","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","useTranslation","i18n","DarkModeToggle","handleClick","lang","changeLanguage","JNavBar","props","isOpen","setIsOpen","dropdownOpen","t","toggle"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../../i18next';\nimport DarkModeToggle from '../controller/DarkModeToggle';\n\nconst handleClick = (lang) => {\n  i18n.changeLanguage(lang)\n}\n\nconst JNavBar = (props) => {\n  const [isOpen, setIsOpen, dropdownOpen] = useState(false);\n  const { t, i18n } = useTranslation();\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">Dico mots</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} to=\"/about\">{t('About.1')}</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n              {t('Options.1')}\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                {t('ChangeOrder.1')}\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>\n                {t('Reset.1')}\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                <i className=\"fas fa-globe-europe\"></i>{t('Language.1')}\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={()=>handleClick('en')}>\n                {t('Language.2')}\n                </DropdownItem>\n                <DropdownItem onClick={()=>handleClick('fr')}>\n                {t('Language.3')}\n                </DropdownItem>\n                <DropdownItem onClick={()=>handleClick('es')}>\n                {t('Language.4')}\n                </DropdownItem>\n                <DropdownItem onClick={()=>handleClick('it')}>\n                {t('Language.5')}\n                </DropdownItem>\n                <DropdownItem  onClick={()=>handleClick('zh-CN')}>\n                {t('Language.6')}\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n          </Nav>\n          <Nav>\n            <NavItem>\n                <NavLink href=\"https://github.com/code-thomasl/\"><i className=\"fab fa-github\"></i> GitHub</NavLink>\n            </NavItem>\n            <DarkModeToggle />\n            </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default JNavBar;\n"]},"metadata":{},"sourceType":"module"}